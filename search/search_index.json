{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to ShellCraft ShellCraft is a hackable game about mining, crafting, and puzzling, loosely based on Ted Chiang's short story \"Seventy-Two Letters\" Under development Shellcraft is under development and at this time does not provide a complete game experience. You're welcome to download the game and play for as long as the content lasts, though. To download and play the game right now, simply run: # Install ShellCraft $ pip install shellcraft # Run ShellCraft: $ shellcraft","title":"Introduction"},{"location":"#welcome-to-shellcraft","text":"ShellCraft is a hackable game about mining, crafting, and puzzling, loosely based on Ted Chiang's short story \"Seventy-Two Letters\" Under development Shellcraft is under development and at this time does not provide a complete game experience. You're welcome to download the game and play for as long as the content lasts, though. To download and play the game right now, simply run: # Install ShellCraft $ pip install shellcraft # Run ShellCraft: $ shellcraft","title":"Welcome to ShellCraft"},{"location":"cli/","text":"Command Line Reference Getting help You can allways use shellcraft --help to see all available commands, or shellcraft <command> --help to get help on a particular command. Additionally, shellcraft tutorial will display the last tutorial message. Mining Use shellcraft mine <resource> to mine a resource. Crafting items See a list of available items to craft with shellcraft craft , and craft an item with shellcraft craft <item> . The resources required will be immediately consumed. Research Like crafting items, shellcraft research lists available project, and shellcraft research <project> starts research on a particular one. Seeing your inventory You can see all available resources with shellcraft resources , or only how much of a particular resource you have with shellcraft resources <resource> . Use shellcraft inventory to see items in your posession. Automating the game \"Hacking\" the game with command line scripts is not only possible, but encouraged. Many people include an alias sc=shellcraft into their .bashrc or .bash_profile . You can write scripts like this one to e.g. automatically mine 10 ore with ./mine.sh ore 10 : #!/usr/bin/env sh for i in ` seq 1 $2 ` ; do shellcraft mine $1 done","title":"Command reference"},{"location":"cli/#command-line-reference","text":"","title":"Command Line Reference"},{"location":"cli/#getting-help","text":"You can allways use shellcraft --help to see all available commands, or shellcraft <command> --help to get help on a particular command. Additionally, shellcraft tutorial will display the last tutorial message.","title":"Getting help"},{"location":"cli/#mining","text":"Use shellcraft mine <resource> to mine a resource.","title":"Mining"},{"location":"cli/#crafting-items","text":"See a list of available items to craft with shellcraft craft , and craft an item with shellcraft craft <item> . The resources required will be immediately consumed.","title":"Crafting items"},{"location":"cli/#research","text":"Like crafting items, shellcraft research lists available project, and shellcraft research <project> starts research on a particular one.","title":"Research"},{"location":"cli/#seeing-your-inventory","text":"You can see all available resources with shellcraft resources , or only how much of a particular resource you have with shellcraft resources <resource> . Use shellcraft inventory to see items in your posession.","title":"Seeing your inventory"},{"location":"cli/#automating-the-game","text":"\"Hacking\" the game with command line scripts is not only possible, but encouraged. Many people include an alias sc=shellcraft into their .bashrc or .bash_profile . You can write scripts like this one to e.g. automatically mine 10 ore with ./mine.sh ore 10 : #!/usr/bin/env sh for i in ` seq 1 $2 ` ; do shellcraft mine $1 done","title":"Automating the game"},{"location":"dev/","text":"Development For Shellcraft Developers This page is aimed at programmes who want to contribute towards Shellcraft. If you just want to enjoy the game, you can safely ignore this. Documentation Documentation is generated using MkDocs - simply edit markdown files in the docs/ folder. Run make servedocs in the project's root to have the docs be built and updated in the browser as they change.","title":"Development"},{"location":"dev/#development","text":"For Shellcraft Developers This page is aimed at programmes who want to contribute towards Shellcraft. If you just want to enjoy the game, you can safely ignore this.","title":"Development"},{"location":"dev/#documentation","text":"Documentation is generated using MkDocs - simply edit markdown files in the docs/ folder. Run make servedocs in the project's root to have the docs be built and updated in the browser as they change.","title":"Documentation"},{"location":"fractions/","text":"Fractions The political landscape in ShellCraft is divided into many fractions, each with their own objectives. The Crown The government has pledged to protect its subject from foreign interference, and preserve the structure of society. While it usually keeps out of business matters, the Crown may approach nomenclators with requests to support political efforts. Sculptor's Union Sculptors and nomenclators work hand in hand in producing the latest and best automata. The sculptor's union is a political heavyweight far beyond the direct interest of just sculptors. The union is under tight control of Lord Mannings. The Kabbalists Rarely interested in worldy affairs, Kabbalists study Names and employ golems as a form of ecstatic meditation. To most modern nomenclators, Kabbalists are obscure relics of bygone days, but they still hold considerable influence in aristocratic circles.","title":"Fractions"},{"location":"fractions/#fractions","text":"The political landscape in ShellCraft is divided into many fractions, each with their own objectives.","title":"Fractions"},{"location":"fractions/#the-crown","text":"The government has pledged to protect its subject from foreign interference, and preserve the structure of society. While it usually keeps out of business matters, the Crown may approach nomenclators with requests to support political efforts.","title":"The Crown"},{"location":"fractions/#sculptors-union","text":"Sculptors and nomenclators work hand in hand in producing the latest and best automata. The sculptor's union is a political heavyweight far beyond the direct interest of just sculptors. The union is under tight control of Lord Mannings.","title":"Sculptor's Union"},{"location":"fractions/#the-kabbalists","text":"Rarely interested in worldy affairs, Kabbalists study Names and employ golems as a form of ecstatic meditation. To most modern nomenclators, Kabbalists are obscure relics of bygone days, but they still hold considerable influence in aristocratic circles.","title":"The Kabbalists"},{"location":"installation/","text":"Installation Stable release To install ShellCraft, run this command in your terminal: $ pip install shellcraft This is the preferred method to install ShellCraft, as it will always install the most recent stable release. This requires Python 2.7, or Python 3.3 or newer. If you don't have pip installed, this Python installation guide can guide you through the process. Running ShellCraft To play ShellCraft, simply invoke it like this: $ shellcraft There's no need to consult the rest of the documentation right now, as the game will guide you through a tutorial and progressively explain all key gameplay elements.","title":"Installation"},{"location":"installation/#installation","text":"","title":"Installation"},{"location":"installation/#stable-release","text":"To install ShellCraft, run this command in your terminal: $ pip install shellcraft This is the preferred method to install ShellCraft, as it will always install the most recent stable release. This requires Python 2.7, or Python 3.3 or newer. If you don't have pip installed, this Python installation guide can guide you through the process.","title":"Stable release"},{"location":"installation/#running-shellcraft","text":"To play ShellCraft, simply invoke it like this: $ shellcraft There's no need to consult the rest of the documentation right now, as the game will guide you through a tutorial and progressively explain all key gameplay elements.","title":"Running ShellCraft"},{"location":"nomenclature/","text":"Nomenclature Names Without Names, automata would just be lifeless blocks of clay and metal. By inserting a Name into an automaton, you can make it come to life and work for you. Each Name consists of up two seventy-two letters, arranged in six rows of twelve. To the uneducated reader, these letters may seem utterly random. But through advancements in nomenclature, the science of creating Names, scholars have discovered that Names are made from Epithets, each designating a specific trait or capability. When written correctly, a name describes the very essence of the object imbued with it. According to A Boy\u2019s Guide to Nomenclature , current thinking holds that there is a lexical universe as well as a physical one, and bringing an object together with a compatible name causes the latent potentialities of both to be realized. There is no single \"true name\" for a given object: depending on its precise shape, a body might be compatible with several names, known as its \"euonyms,\" and conversely a simple name might tolerate significant variations in body shape. Lexical Charges The current understanding of the lexical realm has it that when a Name is inserted into an automaton, it operates by traversing lexical charges across the name. There are two types of charges: weak charges and strong charges. Weak lexical charges on their will immediately disperse. Strong lexical charges however can sustain themselves indefinitely - if a letter becomes strongly charged, it will usually remain so until the charge is removed by Traversion. Traversion Traversion of charges occurse when a weakly charged letter neighbours a strongly charged one. The weakly charged letter will disperse it's charge and become uncharged as usual. However the strong charge will ignite the neighbouring letter -- in the direction opposite of the weak charge -- to become strongly charged, and partially discharge itself, becoming weakly charged. In effect, that means that a weak charge neighbouring a strong charge will \"travel\" across the name: Note that charges that reach the boundaries of the name will actually disperse. Epithets Epithets are the basic components that Names are made of. Through your pursuit of nomenclature, you will learn to combine these Epithets to make proper Eyonyms for your automata. Life The Life epithet, designated by the letter L , is the simplest and most vital one. When placed in a name, it periodically creates a weak charge: Since weak charges can't sustain themselves, the Life epithet is usually accompanied by an Amplification epithet: Amplification The Amplification epithet, designated by the letter A , is a basic transducer. When one of its neighbouring epithets exhibit a weak charge, the Amplification epithet will immediately get strongly charged, effectively allowing the charge to travel across the name: Movement The Movement epithet, designated by the letter M , might be the most studied epithets of all time. It is incredibly versatile in that it works on most bodies that possess some form of limb, even snake-like crawlers. It has to be placed in the area of the name corresponding to the limb for the body to accept the name. When activated with a strong lexical charge, the Movement epithet will consume the charge and move the automaton forward. As such, it belongs to the class of Non-Traversing Epithets. Concurrence The Concurrence epithet, designated by the letter C , imbues the automaton with the possibility of simultaneous actions. When strongly charged, it will create two strong charges perpendicular to the direction the charge was travelling from. Silence The Silence epithet, designated by a S , is non-traversing and can never be charged. Any strong charge traversing into a Silence epithet will immediately disperse. Restraint The Restraint epithet, designated by a R , will only traverse every second time it gets strongly charged. Every other time, it will disperse che charge.","title":"Nomenclature"},{"location":"nomenclature/#nomenclature","text":"","title":"Nomenclature"},{"location":"nomenclature/#names","text":"Without Names, automata would just be lifeless blocks of clay and metal. By inserting a Name into an automaton, you can make it come to life and work for you. Each Name consists of up two seventy-two letters, arranged in six rows of twelve. To the uneducated reader, these letters may seem utterly random. But through advancements in nomenclature, the science of creating Names, scholars have discovered that Names are made from Epithets, each designating a specific trait or capability. When written correctly, a name describes the very essence of the object imbued with it. According to A Boy\u2019s Guide to Nomenclature , current thinking holds that there is a lexical universe as well as a physical one, and bringing an object together with a compatible name causes the latent potentialities of both to be realized. There is no single \"true name\" for a given object: depending on its precise shape, a body might be compatible with several names, known as its \"euonyms,\" and conversely a simple name might tolerate significant variations in body shape.","title":"Names"},{"location":"nomenclature/#lexical-charges","text":"The current understanding of the lexical realm has it that when a Name is inserted into an automaton, it operates by traversing lexical charges across the name. There are two types of charges: weak charges and strong charges. Weak lexical charges on their will immediately disperse. Strong lexical charges however can sustain themselves indefinitely - if a letter becomes strongly charged, it will usually remain so until the charge is removed by Traversion.","title":"Lexical Charges"},{"location":"nomenclature/#traversion","text":"Traversion of charges occurse when a weakly charged letter neighbours a strongly charged one. The weakly charged letter will disperse it's charge and become uncharged as usual. However the strong charge will ignite the neighbouring letter -- in the direction opposite of the weak charge -- to become strongly charged, and partially discharge itself, becoming weakly charged. In effect, that means that a weak charge neighbouring a strong charge will \"travel\" across the name: Note that charges that reach the boundaries of the name will actually disperse.","title":"Traversion"},{"location":"nomenclature/#epithets","text":"Epithets are the basic components that Names are made of. Through your pursuit of nomenclature, you will learn to combine these Epithets to make proper Eyonyms for your automata.","title":"Epithets"},{"location":"nomenclature/#life","text":"The Life epithet, designated by the letter L , is the simplest and most vital one. When placed in a name, it periodically creates a weak charge: Since weak charges can't sustain themselves, the Life epithet is usually accompanied by an Amplification epithet:","title":"Life"},{"location":"nomenclature/#amplification","text":"The Amplification epithet, designated by the letter A , is a basic transducer. When one of its neighbouring epithets exhibit a weak charge, the Amplification epithet will immediately get strongly charged, effectively allowing the charge to travel across the name:","title":"Amplification"},{"location":"nomenclature/#movement","text":"The Movement epithet, designated by the letter M , might be the most studied epithets of all time. It is incredibly versatile in that it works on most bodies that possess some form of limb, even snake-like crawlers. It has to be placed in the area of the name corresponding to the limb for the body to accept the name. When activated with a strong lexical charge, the Movement epithet will consume the charge and move the automaton forward. As such, it belongs to the class of Non-Traversing Epithets.","title":"Movement"},{"location":"nomenclature/#concurrence","text":"The Concurrence epithet, designated by the letter C , imbues the automaton with the possibility of simultaneous actions. When strongly charged, it will create two strong charges perpendicular to the direction the charge was travelling from.","title":"Concurrence"},{"location":"nomenclature/#silence","text":"The Silence epithet, designated by a S , is non-traversing and can never be charged. Any strong charge traversing into a Silence epithet will immediately disperse.","title":"Silence"},{"location":"nomenclature/#restraint","text":"The Restraint epithet, designated by a R , will only traverse every second time it gets strongly charged. Every other time, it will disperse che charge.","title":"Restraint"}]}